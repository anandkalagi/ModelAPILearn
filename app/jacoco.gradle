apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.8.4'
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    group = "Reporting"
    description = "Generate Jacoco coverage report"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def excludeFileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            '**/*Spec*.*',
            'android/**/*.*',
            '**/*.xml'
    ]
    def javaClasses = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: excludeFileFilter)
    def kotlinClasses = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: excludeFileFilter)
    def javaSrc = "$project.projectDir/src/main/java"
    def kotlinSrc = "$project.projectDir/src/main/kotlin"

    sourceDirectories = files([javaSrc, kotlinSrc])
    classDirectories = files([javaClasses, kotlinClasses])
    
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDevDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}
